swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
  - https
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User list all current month Transactions API
      description: API for fetching all user's transactions for the current month
      operationId: getAllTransaction
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: query
          name: month
          description: Sort transactions by month
          type: string
          required: false
          enum: ['01','02','03','04','05','06','07','08','09','10','11','12']
        - in: query
          name: desc
          description: Sort transactions by description
          type: string
          required: false
        - in: query
          name: amount
          description: Sort transactions by amount
          type: string
          required: false
        - in: query
          name: type
          description: Sort transactions by transaction type
          type: string
          required: false
        - in: query
          name: category
          description: Sort transactions by category
          type: string
          required: false
      produces:
        - application/json
      responses:
        '200':
          description: Transactions retrieved successully
          schema:
            $ref: '#/definitions/GetTransactionsResponse'
        '400':
          description: Invalid TransactionID
        '500':
          description: Internal Server Error
    post:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User new Transaction API
      description: add a new user's transaction in the database
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - in: body
          name: body
          description: send new transaction information
          required: true
          schema:
            $ref: '#/definitions/AddTransaction'
      produces:
        - application/json
      responses:
        '201':
          description: transaction created successully
          schema:
            $ref: '#/definitions/AddTransactionResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /transactions/{transactionID}:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User view Transaction API
      description: API for fetching transaction's user by ID
      operationId: getTransactionByID
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: transactionID
          in: path
          description: ID of transaction to be displayed
          required: true
          type: integer
          format: int
      produces:
        - application/json
      responses:
        '200':
          description: Transaction retrieved successully
          schema:
            $ref: '#/definitions/GetTransactionResponse'
        '400':
          description: Invalid TransactionID
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User update Transaction API
      description: update a transaction in the database
      operationId: updateTransactionByID
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: transactionID
          in: path
          description: ID of transaction update
          required: true
          type: integer
          format: int
        - in: body
          name: body
          description: Update transaction informations
          required: true
          schema:
            $ref: '#/definitions/UpdateTransaction'
      produces:
        - application/json
      responses:
        '204':
          description: Transaction updated successully
        '400':
          description: Invalid TransactionID
        '500':
          description: Internal Server Error
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions Module
      summary: User delete Transaction API
      description: delete a transaction in the database
      operationId: deleteTransactionById
      parameters:
        - in: header
          type: string
          name: Authorization
          description: Attach Bearer JWT token
          required: true
        - name: transactionID
          in: path
          description: ID of transaction to delete
          required: true
          type: integer
          format: int
      produces:
        - application/json
      responses:
        '204':
          description: Transaction deleted successully
        '400':
          description: Invalid TransactionID
        '500':
          description: Internal Server Error        
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  GetTransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body: 
        type: object
        properties:
          date:
            type: string
          description:
            type: string
          amount:
            type: string
          type:
            type: string
          category:
            type: string
          notes:
            type: string
  GetTransactionsResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body: 
        type: array
        items : 
          type: object
          properties:
            date:
              type: string
            description:
              type: string
            amount:
              type: string
            type:
              type: string
            category:
              type: string
            notes:
              type: string   
  UpdateTransaction:
    type: object
    properties:
      date:
        type: string
      description:
        type: string
      amount:
        type: string
      type:
        type: string
      category:
          type: string
      notes:
        type: string
  UpdateTransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body: 
        type: object
        properties:
          id:
            type: string
          date:
            type: string
          description:
            type: string
          amount:
            type: string
          type:
            type: string
          category:
            type: string
          notes:
            type: string
  AddTransaction:
    type: object
    properties:
      date:
        type: string
      description:
        type: string
      amount:
        type: string
      type:
        type: string
      category:
        type: string
      notes:
        type: string
  AddTransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body: 
        type: object
        properties:
          id:
            type: string
  DeleteTransactionResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body: 
        type: object
        properties:
          id:
            type: string

